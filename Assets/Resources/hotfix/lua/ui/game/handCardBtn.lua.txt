HandCardBtn = {}
HandCardBtn.__index = HandCardBtn

HandCardBtn.GetCardBtn = "GetCardBtn"
HandCardBtn.InformationDeclarationBtn = "InformationDeclarationBtn"
HandCardBtn.InformationTransmitBtn = "InformationTransmitBtn"
HandCardBtn.ReceiveInformationBtn = "ReceiveInformationBtn"
HandCardBtn.RefuseInformationBtn = "RefuseInformationBtn"
HandCardBtn.MiDianTransmitBtn = "MiDianTransmitBtn"
HandCardBtn.ZhiDaTransmitBtn = "ZhiDaTransmitBtn"
HandCardBtn.WenBenTransmitBtn = "WenBenTransmitBtn"
HandCardBtn.WaitPlayHandBtn = "WaitPlayHandBtn"
HandCardBtn.PlayHandBtn = "PlayHandBtn"
HandCardBtn.SkipBtn = "SkipBtn"
HandCardBtn.ShiPoBtn = "ShiPoBtn"
HandCardBtn.OperateEndBtn = "OperateEndBtn"
HandCardBtn.DisCardBtn = "DisCardBtn"
HandCardBtn.EndTurnBtn = "EndTurnBtn"

local LinkCardScripts = function(item)
	item.cardScripts = {}
	item.cardScripts[GameCard.XiaoGuo.GongKaiWenBen] = require "ui/cards/gongKaiWenBen"
	item.cardScripts[GameCard.XiaoGuo.MiMiXiaDa] = require "ui/cards/miMiXiaDa"
	item.cardScripts[GameCard.XiaoGuo.ShiTan] = require "ui/cards/shiTan"
	item.cardScripts[GameCard.XiaoGuo.DiaoBao] = require "ui/cards/diaoBao"
	item.cardScripts[GameCard.XiaoGuo.JieHuo] = require "ui/cards/jieHuo"
	item.cardScripts[GameCard.XiaoGuo.LiJian] = require "ui/cards/liJian"
	item.cardScripts[GameCard.XiaoGuo.PoYi] = require "ui/cards/poYi"
	item.cardScripts[GameCard.XiaoGuo.DiaoHuLiShan] = require "ui/cards/diaoHuLiShan"
	item.cardScripts[GameCard.XiaoGuo.ZengYuan] = require "ui/cards/zengYuan"
	item.cardScripts[GameCard.XiaoGuo.ShaoHui] = require "ui/cards/shaoHui"
	item.cardScripts[GameCard.XiaoGuo.SuoDing] = require "ui/cards/suoDing"
	item.cardScripts[GameCard.XiaoGuo.WeiXianQinBao] = require "ui/cards/weiXianQinBao"
	item.cardScripts[GameCard.XiaoGuo.ShiPo] = require "ui/cards/shiPo"
	item.cardScripts[GameCard.XiaoGuo.ZhuanYi] = require "ui/cards/zhuanYi"
	item.cardScripts[GameCard.XiaoGuo.JiMiWenJian] = require "ui/cards/jiMiWenJian"
end

function HandCardBtn:New(gameObject, handCard)
	local item = {}
	item.gameObject = gameObject
	item.transform = gameObject.transform
	item.ui = {}
	item.activeSelf = {}
	item.handCard = handCard
	
	LinkCardScripts(item)

	setmetatable(item, HandCardBtn)
	return item
end

function HandCardBtn:InitUIReference()
	self:InitBtn(HandCardBtn.GetCardBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.InformationDeclarationBtn)--activeFlag.activeSelf  activeFlag.noPlayingCard  activeFlag.noShiPo
	self:InitBtn(HandCardBtn.InformationTransmitBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.ReceiveInformationBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.RefuseInformationBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.MiDianTransmitBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.ZhiDaTransmitBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.WenBenTransmitBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.WaitPlayHandBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.PlayHandBtn)--activeFlag.activeSelf  activeFlag.noPlayingCard  activeFlag.noShiPo
	self:InitBtn(HandCardBtn.SkipBtn)--activeFlag.activeSelf  activeFlag.noPlayingCard
	self:InitBtn(HandCardBtn.ShiPoBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.OperateEndBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.DisCardBtn)--activeFlag.activeSelf
	self:InitBtn(HandCardBtn.EndTurnBtn)--activeFlag.activeSelf
end

function HandCardBtn:InitUI()
	for key, value in pairs(self.ui) do
		value.activeFlag.activeSelf = false
		value.btn.gameObject:SetActive(false)
	end
	self.cache = {}
end

function HandCardBtn:InitBtn(name)
	self.ui[name] = {}
	self.ui[name].btn = self.transform:Find(name):GetComponent(typeof(Button))
	self.ui[name].activeFlag = {}
	self.ui[name].activeFlag.activeSelf = false
	self.ui[name].AutoSetActive = function()
		local activeSelf = true
		for key, value in pairs(self.ui[name].activeFlag) do
			if value == false then
				activeSelf = false
				break
			end
		end
		if self.ui[name].btn.gameObject.activeSelf ~= activeSelf then
			self.ui[name].btn.gameObject:SetActive(activeSelf)
		end
	end
end

function HandCardBtn:Update()
	for name, btnTable in pairs(self.ui) do
		btnTable.AutoSetActive()
	end
end

function HandCardBtn:GetChooseCardInfo()
	local count, card, index = 0, nil, nil
	if self.handCard.chooseCards ~= nil then
		for key, value in pairs(self.handCard.chooseCards) do
			if value ~= nil then
				count = count + 1
				card = value
				index = key
			end
		end
	end
	return count, card, index
end

function HandCardBtn:OnGetCardBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.GetCardBtn].btn)
	self.ui[HandCardBtn.GetCardBtn].activeFlag.activeSelf = false
	Global.Protos.Game.SendDealCards(2)
end

function HandCardBtn:OnInformationDeclarationBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.InformationDeclarationBtn].btn)
	self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.PlayHandBtn].activeFlag.activeSelf = false
	Global.Protos.Game.SendInformationDeclaration()
end

function HandCardBtn:OnInformationTransmitBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.InformationTransmitBtn].btn)
	
	self.cache.sendInformationTransmitData = {}
	local count, card, index = self:GetChooseCardInfo()
	
	if count ~= 1 then
		Global.Methods.ShowTips2("请选择1张牌作为情报传出")
		return
	end
	
	self.ui[HandCardBtn.InformationTransmitBtn].activeFlag.activeSelf = false
	self.cache.sendInformationTransmitData.fromUserName = Global.Data.User.UserName
	self.cache.sendInformationTransmitData.card = card
	self.cache.sendInformationTransmitData.handCardIndex = index
	if card.transmit == GameCard.TransmitType.ZhiDa then
		self:OnZhiDaTransmitBtn()
	elseif card.transmit == GameCard.TransmitType.MiDian then
		self:OnMiDianTransmitBtn()
	elseif card.transmit == GameCard.TransmitType.WenBen then
		self:OnWenBenTransmitBtn()
	elseif card.transmit == GameCard.TransmitType.Choose then
		self.ui[HandCardBtn.MiDianTransmitBtn].activeFlag.activeSelf = true
		self.ui[HandCardBtn.ZhiDaTransmitBtn].activeFlag.activeSelf = true
		self.ui[HandCardBtn.WenBenTransmitBtn].activeFlag.activeSelf = true
		Global.Methods.ShowTips2("请选择情报传递方式")
	end
end

function HandCardBtn:OnReceiveInformationBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.ReceiveInformationBtn].btn)
	self.ui[HandCardBtn.ReceiveInformationBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.RefuseInformationBtn].activeFlag.activeSelf = false
	Global.Protos.Game.SendWaitInformationReceive(true)
end

function HandCardBtn:OnRefuseInformationBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.RefuseInformationBtn].btn)
	self.ui[HandCardBtn.ReceiveInformationBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.RefuseInformationBtn].activeFlag.activeSelf = false
	Global.Protos.Game.SendWaitInformationReceive(false)
end

function HandCardBtn:OnMiDianTransmitBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.MiDianTransmitBtn].btn)
	self.ui[HandCardBtn.MiDianTransmitBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.ZhiDaTransmitBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.WenBenTransmitBtn].activeFlag.activeSelf = false
	
	if self.cache.sendInformationTransmitData == nil then return end
	self.cache.sendInformationTransmitData.transmit = GameCard.TransmitType.MiDian
	self.cache.sendInformationTransmitData.direction = GameCard.DirectionType.Ni
	self.cache.sendInformationTransmitData.toUserName = nil
	Global.Protos.Game.SendInformationTransmitReady(self.cache.sendInformationTransmitData)
	self.cache.sendInformationTransmitData = nil
end

function HandCardBtn:OnZhiDaTransmitBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.ZhiDaTransmitBtn].btn)
	self.ui[HandCardBtn.MiDianTransmitBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.ZhiDaTransmitBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.WenBenTransmitBtn].activeFlag.activeSelf = false
	
	if self.cache.sendInformationTransmitData == nil then return end
	self.cache.sendInformationTransmitData.transmit = GameCard.TransmitType.ZhiDa
	self.cache.sendInformationTransmitData.direction = GameCard.DirectionType.None
	Global.Methods.ShowTips("请选择你要传递的玩家")
	EventManager:TriggerEvent(Global.Event.InformationStage.ZhiDaChoose, nil)
end

function HandCardBtn:OnWenBenTransmitBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.WenBenTransmitBtn].btn)
	self.ui[HandCardBtn.MiDianTransmitBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.ZhiDaTransmitBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.WenBenTransmitBtn].activeFlag.activeSelf = false
	
	if self.cache.sendInformationTransmitData == nil then return end
	self.cache.sendInformationTransmitData.transmit = GameCard.TransmitType.WenBen
	self.cache.sendInformationTransmitData.direction = GameCard.DirectionType.Ni
	self.cache.sendInformationTransmitData.toUserName = nil
	Global.Protos.Game.SendInformationTransmitReady(self.cache.sendInformationTransmitData)
	self.cache.sendInformationTransmitData = nil
end

function HandCardBtn:OnWaitPlayHandBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.WaitPlayHandBtn].btn)
	self.ui[HandCardBtn.WaitPlayHandBtn].activeFlag.activeSelf = false
	
	EventManager:TriggerEvent(Global.Event.InformationStage.StopWaitResponseTimer, nil)
	Global.Protos.Game.SendPlayHandCardResponse(false)
end

function HandCardBtn:OnPlayHandBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.PlayHandBtn].btn)
	
	local count, card, index = self:GetChooseCardInfo()
	if count ~= 1 then
		Global.Methods.ShowTips2("请选择1张牌打出")
		return
	end
	
	if self.cardScripts[card.xiaoguo].CheckUseCondition() == false then
		return
	end
	
	self.ui[HandCardBtn.PlayHandBtn].activeFlag.noPlayingCard = false
	self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.noPlayingCard = false
	self.ui[HandCardBtn.SkipBtn].activeFlag.noPlayingCard = false
	
	local data = {}
	data.userName = Global.Data.User.UserName
	data.isPlayHandCard = true
	data.card = card
	data.handCardIndex = index
	data.targetUserName = nil
	
	if self.cardScripts[card.xiaoguo].ChooseTarget() == true then
		self.cache.sendPlayHandCardData = data
		return
	end
	
	Global.Protos.Game.SendPlayHandCard(data)
end

function HandCardBtn:OnSkipBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.SkipBtn].btn)
	self.ui[HandCardBtn.SkipBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.PlayHandBtn].activeFlag.activeSelf = false
	
	local data = {}
	data.userName = Global.Data.User.UserName
	data.isPlayHandCard = false
	data.card = nil
	data.handCardIndex = nil
	data.targetUserName = nil
	
	Global.Protos.Game.SendPlayHandCard(data)
end

function HandCardBtn:OnShiPoBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.ShiPoBtn].btn)

	local count, card, index = self:GetChooseCardInfo()
	if count ~= 1 or card.xiaoguo ~= GameCard.XiaoGuo.ShiPo then
		Global.Methods.ShowTips2("请选择1张识破打出")
	else
		self.ui[HandCardBtn.ShiPoBtn].activeFlag.activeSelf = false
		Global.Protos.Game.SendAskUseShiPo(true, card, index)
	end
	return
end

function HandCardBtn:OnOperateEndBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.OperateEndBtn].btn)
	self.ui[HandCardBtn.OperateEndBtn].activeFlag.activeSelf = false
	Global.Protos.Game.SendGameTurnOpertateEnd()
end

function HandCardBtn:OnDisCardBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.DisCardBtn].btn)
	if #self.handCard.handCards <= 6 then
		Global.Methods.ShowTips2("不需要弃牌")
		Global.Protos.Game.SendGameTurnDisCard(nil, nil)
		return
	end

	local count = #self.handCard.handCards
	if self.handCard.chooseCards ~= nil then
		for key, value in pairs(self.handCard.chooseCards) do
			if value ~= nil then
				count = count - 1
			end
		end
	end

	if count ~= 6 then
		Global.Methods.ShowTips2("需要弃至剩余6张牌,请选择"..tostring(#self.handCard.handCards - 6).."张丢弃")
	else
		local cards, indexs = {}, {}
		if self.handCard.chooseCards ~= nil then
			for key, value in pairs(self.handCard.chooseCards) do
				if value ~= nil then
					table.insert(cards, value)
					table.insert(indexs, key)
				end
			end
		end
		self.ui[HandCardBtn.DisCardBtn].activeFlag.activeSelf = false
		
		Global.Protos.Game.SendGameTurnDisCard(cards, indexs)
	end
end

function HandCardBtn:OnEndTurnBtn()
	Global.Methods.PlayBtnAnimation(self.ui[HandCardBtn.EndTurnBtn].btn)
	self.ui[HandCardBtn.EndTurnBtn].activeFlag.activeSelf = false
	Global.Protos.Game.SendGameTurnEnd()
end

function HandCardBtn:AddUIEvent()
	UIEventManager:AddListener(self.ui[HandCardBtn.GetCardBtn].btn, self.OnGetCardBtn, self, "lua.game.handCard.handCardBtn.OnGetCardBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.InformationDeclarationBtn].btn, self.OnInformationDeclarationBtn, self, "lua.game.handCard.handCardBtn.OnInformationDeclarationBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.InformationTransmitBtn].btn, self.OnInformationTransmitBtn, self, "lua.game.handCard.handCardBtn.OnReceiveInformationBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.ReceiveInformationBtn].btn, self.OnReceiveInformationBtn, self, "lua.game.handCard.handCardBtn.OnInformationTransmitBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.RefuseInformationBtn].btn, self.OnRefuseInformationBtn, self, "lua.game.handCard.handCardBtn.OnRefuseInformationBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.MiDianTransmitBtn].btn, self.OnMiDianTransmitBtn, self, "lua.game.handCard.handCardBtn.OnMiDianTransmitBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.ZhiDaTransmitBtn].btn, self.OnZhiDaTransmitBtn, self, "lua.game.handCard.handCardBtn.OnZhiDaTransmitBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.WenBenTransmitBtn].btn, self.OnWenBenTransmitBtn, self, "lua.game.handCard.handCardBtn.OnWenBenTransmitBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.WaitPlayHandBtn].btn, self.OnWaitPlayHandBtn, self, "lua.game.handCard.handCardBtn.OnWaitPlayHandBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.PlayHandBtn].btn, self.OnPlayHandBtn, self, "lua.game.handCard.handCardBtn.OnPlayHandBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.SkipBtn].btn, self.OnSkipBtn, self, "lua.game.handCard.handCardBtn.OnSkipBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.ShiPoBtn].btn, self.OnShiPoBtn, self, "lua.game.handCard.handCardBtn.OnShiPoBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.OperateEndBtn].btn, self.OnOperateEndBtn, self, "lua.game.handCard.handCardBtn.OnOperateEndBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.DisCardBtn].btn, self.OnDisCardBtn, self, "lua.game.handCard.handCardBtn.OnDisCardBtn")
	UIEventManager:AddListener(self.ui[HandCardBtn.EndTurnBtn].btn, self.OnEndTurnBtn, self, "lua.game.handCard.handCardBtn.OnEndTurnBtn")
end

function HandCardBtn:RemoveUIEvent()
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.GetCardBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.InformationDeclarationBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.InformationTransmitBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.ReceiveInformationBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.RefuseInformationBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.MiDianTransmitBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.ZhiDaTransmitBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.WenBenTransmitBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.WaitPlayHandBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.PlayHandBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.SkipBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.ShiPoBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.OperateEndBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.DisCardBtn].btn)
	UIEventManager:RemoveAllListeners(self.ui[HandCardBtn.EndTurnBtn].btn)
end

--等待抽卡显示按钮,开始抽卡隐藏按钮
function HandCardBtn:OnWaitGameTurnDealCards()
	if Global.Data.RoomInfo.CurrentGameTurnUserName == Global.Data.User.UserName then
		self.ui[HandCardBtn.GetCardBtn].activeFlag.activeSelf = true
	end
end

function HandCardBtn:OnDealCardsStart(data)
	if Global.Data.RoomInfo.CurrentGameTurnUserName == Global.Data.User.UserName then
		self.ui[HandCardBtn.GetCardBtn].activeFlag.activeSelf = false
	end
end

--需要弃牌且符合弃牌条件时弃牌
function HandCardBtn:OnWaitGameTurnDisCard()
	if Global.Data.RoomInfo.CurrentGameTurnUserName == Global.Data.User.UserName then
		if #self.handCard.handCards > 6 then
			self.ui[HandCardBtn.DisCardBtn].activeFlag.activeSelf = true
		else
			Global.Protos.Game.SendGameTurnDisCard(nil, nil)
		end
	end

end

function HandCardBtn:OnWaitGameTurnEnd()
	if Global.Data.RoomInfo.CurrentGameTurnUserName == Global.Data.User.UserName then
		self.ui[HandCardBtn.EndTurnBtn].activeFlag.activeSelf = true
	end
end

function HandCardBtn:OnWaitInformationDeclaration()
	if Global.Data.User.UserName == Global.Data.RoomInfo.CurrentGameTurnUserName then
		self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.activeSelf = true
		self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.noPlayingCard = true
		self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.noShiPo = true
		self.ui[HandCardBtn.PlayHandBtn].activeFlag.activeSelf = true
		self.ui[HandCardBtn.PlayHandBtn].activeFlag.noPlayingCard = true
		self.ui[HandCardBtn.PlayHandBtn].activeFlag.noShiPo = true
	end
end

function HandCardBtn:OnWaitInformationTransmit()
	if Global.Data.User.UserName == Global.Data.RoomInfo.CurrentGameTurnUserName then
		self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.activeSelf = false
		self.ui[HandCardBtn.PlayHandBtn].activeFlag.activeSelf = false
		self.ui[HandCardBtn.InformationTransmitBtn].activeFlag.activeSelf = true
		
		if #self.handCard.handCards <= 0 then
			Global.Protos.Game.SendDealCards(1)
		end
	end
end

function HandCardBtn:OnZhiDaChooseComplete(userName)
	self.cache.sendInformationTransmitData.toUserName = userName
	Global.Protos.Game.SendInformationTransmitReady(self.cache.sendInformationTransmitData)
	self.cache.sendInformationTransmitData = nil
end

function HandCardBtn:OnWaitInformationReceive(data)
	if Global.Data.User.UserName == data.userName then
		self.ui[HandCardBtn.ReceiveInformationBtn].activeFlag.activeSelf = data.canReceive
		self.ui[HandCardBtn.RefuseInformationBtn].activeFlag.activeSelf = data.canRefuse
	end
end

function HandCardBtn:OnReceiveAskPlayHandCard(data)
	for i = 1, #data.userName do
		if data.userName[i] == Global.Data.User.UserName then
			self.ui[HandCardBtn.WaitPlayHandBtn].activeFlag.activeSelf = true
			break
		end
	end
end

function HandCardBtn:OnWaitResponseTimer()
	self.ui[HandCardBtn.WaitPlayHandBtn].activeFlag.activeSelf = false
end

function HandCardBtn:OnReceivePlayerWantPlayHandCard(data)
	if Global.Data.User.UserName == data.userName then
		self.ui[HandCardBtn.PlayHandBtn].activeFlag.activeSelf = not data.isSkip
		self.ui[HandCardBtn.SkipBtn].activeFlag.activeSelf = not data.isSkip
	else
		self.ui[HandCardBtn.WaitPlayHandBtn].activeFlag.activeSelf = false
	end
end

function HandCardBtn:OnReceiveAskUseShiPo(data)
	self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.noShiPo = false
	self.ui[HandCardBtn.PlayHandBtn].activeFlag.noShiPo = false
	
	for i = 1, #data.userName do
		if Global.Data.User.UserName == data.userName[i] then
			Global.Methods.ShowTips2("可以打出识破")
			self.ui[HandCardBtn.ShiPoBtn].activeFlag.activeSelf = true
			break
		end
	end
end

function HandCardBtn:OnReceiveAskUseShiPoEnd()
	self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.noShiPo = true
	self.ui[HandCardBtn.PlayHandBtn].activeFlag.noShiPo = true
	self.ui[HandCardBtn.ShiPoBtn].activeFlag.activeSelf = false
end

function HandCardBtn:OnTriggerCardResult(data)
	if data.isTrigger == false and data.userName == Global.Data.User.UserName then
		self.ui[HandCardBtn.PlayHandBtn].activeFlag.noPlayingCard = true
		self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.noPlayingCard = true
		self.ui[HandCardBtn.SkipBtn].activeFlag.noPlayingCard = true
	end
end

function HandCardBtn:OnInformationTransmit(data)
	self.ui[HandCardBtn.InformationTransmitBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.PlayHandBtn].activeFlag.activeSelf = false
	self.ui[HandCardBtn.SkipBtn].activeFlag.activeSelf = false
end

function HandCardBtn:OnPlayHandCardFailed(data)
	self.ui[HandCardBtn.PlayHandBtn].activeFlag.noPlayingCard = true
	self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.noPlayingCard = true
	self.ui[HandCardBtn.SkipBtn].activeFlag.noPlayingCard = true
end

function HandCardBtn:OnCardAnimationEnd(data)
	self.cardScripts[data.card.xiaoguo].OnTriggerCardAnimationEnd(data, self)
	self.ui[HandCardBtn.PlayHandBtn].activeFlag.noPlayingCard = true
	self.ui[HandCardBtn.InformationDeclarationBtn].activeFlag.noPlayingCard = true
	self.ui[HandCardBtn.SkipBtn].activeFlag.noPlayingCard = true
	self.ui[HandCardBtn.PlayHandBtn].activeFlag.activeSelf = not self.cardScripts[data.card.xiaoguo].IsEndTurnImmediatelyAfterTrigger()
	self.ui[HandCardBtn.SkipBtn].activeFlag.activeSelf = not self.cardScripts[data.card.xiaoguo].IsEndTurnImmediatelyAfterTrigger()
end

function HandCardBtn:OnDiaoBaoAnimationEnd(data)
	if data.userName == Global.Data.User.UserName then
		self:OnCardAnimationEnd(data)
	end
end

function HandCardBtn:OnPoYiAnimationEnd(data)
	if data.userName == Global.Data.User.UserName then
		self:OnCardAnimationEnd(data)
	end
end

function HandCardBtn:OnShaoHuiAnimationEnd(data)
	if data.userName == Global.Data.User.UserName then
		self:OnCardAnimationEnd(data)
	end
end

function HandCardBtn:OnZengYuanAnimationEnd()
	if self.cache.receivedZengYuanData ~= nil then
		self:OnCardAnimationEnd(self.cache.receivedZengYuanData)
		self.cache.receivedZengYuanData = nil
	end
end

function HandCardBtn:OnUseZengYuan(data)
	if data.userName == Global.Data.User.UserName then
		self.cache.receivedZengYuanData = data
	end
end

function HandCardBtn:OnUseJiMiWenJian(data)
	if data.userName == Global.Data.User.UserName then
		self.cache.receivedJiMiWenJianData = data
	end
end

function HandCardBtn:OnJiMiWenJianAnimationEnd()
	if self.cache.receivedJiMiWenJianData ~= nil then
		self:OnCardAnimationEnd(self.cache.receivedJiMiWenJianData)
		self.cache.receivedJiMiWenJianData = nil
	end
end

function HandCardBtn:OnSuoDingAnimationEnd(data)
	if data.userName == Global.Data.User.UserName then
		self:OnCardAnimationEnd(data)
	end
end

function HandCardBtn:OnSuoDingChooseComplete(userName)
	self.cache.sendPlayHandCardData.targetUserName = userName
	Global.Protos.Game.SendPlayHandCard(self.cache.sendPlayHandCardData)
	self.cache.sendPlayHandCardData = nil
end

function HandCardBtn:OnJieHuoAnimationEnd(data)
	if data.userName == Global.Data.User.UserName then
		self:OnCardAnimationEnd(data)
	end
end

function HandCardBtn:OnDiaoHuLiShanAnimationEnd(data)
	if data.userName == Global.Data.User.UserName then
		self:OnCardAnimationEnd(data)
	end
end

function HandCardBtn:AddListener()
	EventManager:AddListener(Global.Event.GameStage.WaitGameTurnDealCards, function() self:OnWaitGameTurnDealCards() end, "Lua.game.handCard.handCardBtn.OnWaitGameTurnDealCards")
	EventManager:AddListener(Global.Event.GameStage.DealCardsStart, function(data) self:OnDealCardsStart(data) end, "Lua.game.handCard.handCardBtn.OnDealCardsStart")
	EventManager:AddListener(Global.Event.GameStage.WaitGameTurnDisCard, function() self:OnWaitGameTurnDisCard() end, "Lua.game.handCard.handCardBtn.OnWaitGameTurnDisCard")
	EventManager:AddListener(Global.Event.GameStage.WaitGameTurnEnd, function() self:OnWaitGameTurnEnd() end, "Lua.game.handCard.handCardBtn.OnWaitGameTurnEnd")
	EventManager:AddListener(Global.Event.InformationStage.WaitInformationDeclaration, function() self:OnWaitInformationDeclaration() end, "Lua.game.handCard.handCardBtn.OnWaitInformationDeclaration")
	EventManager:AddListener(Global.Event.InformationStage.WaitInformationTransmit, function() self:OnWaitInformationTransmit() end, "Lua.game.handCard.handCardBtn.OnWaitInformationTransmit")
	EventManager:AddListener(Global.Event.InformationStage.ZhiDaChooseComplete, function(data) self:OnZhiDaChooseComplete(data) end, "Lua.game.handCard.handCardBtn.OnZhiDaChooseComplete")
	EventManager:AddListener(Global.Event.InformationStage.WaitInformationReceive, function(data) self:OnWaitInformationReceive(data) end, "Lua.game.handCard.handCardBtn.OnWaitInformationReceive")
	EventManager:AddListener(Global.Event.InformationStage.ReceiveAskPlayHandCard, function(data) self:OnReceiveAskPlayHandCard(data) end, "Lua.game.handCard.handCardBtn.OnReceiveAskPlayHandCard")
	EventManager:AddListener(Global.Event.InformationStage.PlayerWantPlayHandCard, function(data) self:OnReceivePlayerWantPlayHandCard(data) end, "Lua.game.handCard.handCardBtn.OnReceivePlayerWantPlayHandCard")
	EventManager:AddListener(Global.Event.Card.AskUseShiPo, function(data) self:OnReceiveAskUseShiPo(data) end, "Lua.game.handCard.handCardBtn.OnReceiveAskUseShiPo")
	EventManager:AddListener(Global.Event.Card.AskUseShiPoEnd, function() self:OnReceiveAskUseShiPoEnd() end, "Lua.game.handCard.handCardBtn.OnReceiveAskUseShiPoEnd")
	EventManager:AddListener(Global.Event.InformationStage.OnWaitResponseTimer, function() self:OnWaitResponseTimer() end, "Lua.game.handCard.handCardBtn.OnWaitResponseTimer")
	EventManager:AddListener(Global.Event.InformationStage.TriggerCardResult, function(data) self:OnTriggerCardResult(data) end, "Lua.game.handCard.handCardBtn.OnTriggerCardResult")
	EventManager:AddListener(Global.Event.InformationStage.InformationTransmit, function(data) self:OnInformationTransmit(data) end, "Lua.game.handCard.handCardBtn.OnInformationTransmit")
	EventManager:AddListener(Global.Event.InformationStage.PlayHandCardFailed, function(data) self:OnPlayHandCardFailed(data) end, "Lua.game.handCard.handCardBtn.OnPlayHandCardFailed")
	EventManager:AddListener(Global.Event.Card.OnDiaoBaoAnimationEnd, function(data) self:OnDiaoBaoAnimationEnd(data) end, "Lua.game.handCard.handCardBtn.OnDiaoBaoAnimationEnd")
	EventManager:AddListener(Global.Event.Card.OnPoYiAnimationEnd, function(data) self:OnPoYiAnimationEnd(data) end, "Lua.game.handCard.handCardBtn.OnPoYiAnimationEnd")
	EventManager:AddListener(Global.Event.Card.OnShaoHuiAnimationEnd, function(data) self:OnShaoHuiAnimationEnd(data) end, "Lua.game.handCard.handCardBtn.OnShaoHuiAnimationEnd")
	EventManager:AddListener(Global.Event.Card.OnZengYuanAnimationEnd, function() self:OnZengYuanAnimationEnd() end, "Lua.game.handCard.handCardBtn.OnZengYuanAnimationEnd")
	EventManager:AddListener(Global.Event.Card.UseZengYuan, function(data) self:OnUseZengYuan(data) end, "Lua.game.handCard.handCardBtn.OnUseZengYuan")
	EventManager:AddListener(Global.Event.Card.UseJiMiWenJian, function(data) self:OnUseJiMiWenJian(data) end, "Lua.game.handCard.handCardBtn.OnUseJiMiWenJian")
	EventManager:AddListener(Global.Event.Card.OnJiMiWenJianAnimationEnd, function() self:OnJiMiWenJianAnimationEnd() end, "Lua.game.handCard.handCardBtn.OnJiMiWenJianAnimationEnd")
	EventManager:AddListener(Global.Event.Card.OnSuoDingAnimationEnd, function(data) self:OnSuoDingAnimationEnd(data) end, "Lua.game.handCard.handCardBtn.OnSuoDingAnimationEnd")
	EventManager:AddListener(Global.Event.Card.SuoDingChooseComplete, function(data) self:OnSuoDingChooseComplete(data) end, "Lua.game.handCard.handCardBtn.OnSuoDingChooseComplete")
	EventManager:AddListener(Global.Event.Card.OnJieHuoAnimationEnd, function(data) self:OnJieHuoAnimationEnd(data) end, "Lua.game.handCard.handCardBtn.OnJieHuoAnimationEnd")
	EventManager:AddListener(Global.Event.Card.OnDiaoHuLiShanAnimationEnd, function(data) self:OnDiaoHuLiShanAnimationEnd(data) end, "Lua.game.handCard.handCardBtn.OnDiaoHuLiShanAnimationEnd")
end

function HandCardBtn:RemoveListener()
	EventManager:RemoveListener(Global.Event.GameStage.WaitGameTurnDealCards, "Lua.game.handCard.handCardBtn.OnWaitGameTurnDealCards")
	EventManager:RemoveListener(Global.Event.GameStage.DealCardsStart, "Lua.game.handCard.handCardBtn.OnDealCardsStart")
	EventManager:RemoveListener(Global.Event.GameStage.WaitGameTurnDisCard, "Lua.game.handCard.handCardBtn.OnWaitGameTurnDisCard")
	EventManager:RemoveListener(Global.Event.GameStage.WaitGameTurnEnd, "Lua.game.handCard.handCardBtn.OnWaitGameTurnEnd")
	EventManager:RemoveListener(Global.Event.InformationStage.WaitInformationDeclaration, "Lua.game.handCard.handCardBtn.OnWaitInformationDeclaration")
	EventManager:RemoveListener(Global.Event.InformationStage.WaitInformationTransmit, "Lua.game.handCard.handCardBtn.OnWaitInformationTransmit")
	EventManager:RemoveListener(Global.Event.InformationStage.ZhiDaChooseComplete, "Lua.game.handCard.handCardBtn.OnZhiDaChooseComplete")
	EventManager:RemoveListener(Global.Event.InformationStage.WaitInformationReceive, "Lua.game.handCard.handCardBtn.OnWaitInformationReceive")
	EventManager:RemoveListener(Global.Event.InformationStage.ReceiveAskPlayHandCard, "Lua.game.handCard.handCardBtn.OnReceiveAskPlayHandCard")
	EventManager:RemoveListener(Global.Event.InformationStage.PlayerWantPlayHandCard, "Lua.game.handCard.handCardBtn.OnReceivePlayerWantPlayHandCard")
	EventManager:RemoveListener(Global.Event.Card.AskUseShiPo, "Lua.game.handCard.handCardBtn.OnReceiveAskUseShiPo")
	EventManager:RemoveListener(Global.Event.Card.AskUseShiPoEnd, "Lua.game.handCard.handCardBtn.OnReceiveAskUseShiPoEnd")
	EventManager:RemoveListener(Global.Event.InformationStage.OnWaitResponseTimer, "Lua.game.handCard.handCardBtn.OnWaitResponseTimer")
	EventManager:RemoveListener(Global.Event.InformationStage.TriggerCardResult, "Lua.game.handCard.handCardBtn.OnTriggerCardResult")
	EventManager:RemoveListener(Global.Event.InformationStage.InformationTransmit, "Lua.game.handCard.handCardBtn.OnInformationTransmit")
	EventManager:RemoveListener(Global.Event.InformationStage.PlayHandCardFailed, "Lua.game.handCard.handCardBtn.OnPlayHandCardFailed")
	EventManager:RemoveListener(Global.Event.Card.OnDiaoBaoAnimationEnd, "Lua.game.handCard.handCardBtn.OnDiaoBaoAnimationEnd")
	EventManager:RemoveListener(Global.Event.Card.OnPoYiAnimationEnd, "Lua.game.handCard.handCardBtn.OnPoYiAnimationEnd")
	EventManager:RemoveListener(Global.Event.Card.OnShaoHuiAnimationEnd, "Lua.game.handCard.handCardBtn.OnShaoHuiAnimationEnd")
	EventManager:RemoveListener(Global.Event.Card.OnZengYuanAnimationEnd, "Lua.game.handCard.handCardBtn.OnZengYuanAnimationEnd")
	EventManager:RemoveListener(Global.Event.Card.UseZengYuan, "Lua.game.handCard.handCardBtn.OnUseZengYuan")
	EventManager:RemoveListener(Global.Event.Card.UseJiMiWenJian, "Lua.game.handCard.handCardBtn.OnUseJiMiWenJian")
	EventManager:RemoveListener(Global.Event.Card.OnJiMiWenJianAnimationEnd, "Lua.game.handCard.handCardBtn.OnJiMiWenJianAnimationEnd")
	EventManager:RemoveListener(Global.Event.Card.OnSuoDingAnimationEnd, "Lua.game.handCard.handCardBtn.OnSuoDingAnimationEnd")
	EventManager:RemoveListener(Global.Event.Card.SuoDingChooseComplete, "Lua.game.handCard.handCardBtn.OnSuoDingChooseComplete")
	EventManager:RemoveListener(Global.Event.Card.OnJieHuoAnimationEnd, "Lua.game.handCard.handCardBtn.OnJieHuoAnimationEnd")
	EventManager:RemoveListener(Global.Event.Card.OnDiaoHuLiShanAnimationEnd, "Lua.game.handCard.handCardBtn.OnDiaoHuLiShanAnimationEnd")
end

function HandCardBtn:Dispose()
	if self.cardScripts ~= nil then
		for key, value in pairs(self.cardScripts) do
			value.Dispose()
		end
	end
	self.cache = nil
end
