CharacterChoose = {}
CharacterChoose.__index = CharacterChoose

function CharacterChoose:New(gameObject)
	local item = {}
	item.gameObject = gameObject
	item.transform = gameObject.transform
	item.ui = {}

	setmetatable(item, CharacterChoose)
	return item
end

function CharacterChoose:InitUIReference()
	self.ui.character = {}
	self.ui.character.Content = self.transform:Find("Choose")
	self.ui.character.Choose = {}

	for i = 1, 3 do
		self.ui.character.Choose[i] = {}
		self.ui.character.Choose[i].transform = self.ui.character.Content:Find("Character"..i)
		self.ui.character.Choose[i].btn = self.ui.character.Choose[i].transform:GetComponent(typeof(Button))
		self.ui.character.Choose[i].image = self.ui.character.Choose[i].transform:GetComponent(typeof(Image))
	end
	
	self.ui.affirmBtn = self.ui.character.Content:Find("AffirmBtn"):GetComponent(typeof(Button))
	self.ui.highLight = self.ui.character.Content:Find("HighLight")
	self.ui.tip = self.transform:Find("Tips")
end

function CharacterChoose:InitUI()
	self.charactersInfo = nil
	self.affirmCharacter = nil
	self.gameObject:SetActive(true)
	self.ui.character.Content.gameObject:SetActive(false)
	self.ui.affirmBtn.gameObject:SetActive(false)
	self.ui.highLight.gameObject:SetActive(false)
	self.ui.tip.gameObject:SetActive(false)
	for i = 1, 3 do
		self.ui.character.Choose[i].image.sprite = ResourcesManager:LoadSprite(Global.Resources.Character[CharacterType.None])
	end
end

function CharacterChoose:OnBtnCharacterCard(index)
	if self.charactersInfo == nil then
		return
	end
	
	self.ui.highLight.localPosition = self.ui.character.Choose[index].transform.localPosition
	self.ui.highLight.gameObject:SetActive(true)
	self.ui.affirmBtn.gameObject:SetActive(true)
	
	self.affirmCharacter = self.charactersInfo[index]
end

function CharacterChoose:OnBtnAffirm()
	if self.affirmCharacter == nil then
		return 
	end
	
	local data = {}
	data.userName = Global.Data.User.UserName
	data.character = self.affirmCharacter
	local dataBytes = Global.Protos.Methods.Lua2Bytes(Global.Protos.FileName.Game, Global.Protos.Class.CharacterChoose_C2S, data)
	NetManager:Send(Global.Login.Network, Global.Protos.Cmd.CharacterChoose_C2S, dataBytes)
	
	self.ui.character.Content.gameObject:SetActive(false)
	self.ui.affirmBtn.gameObject:SetActive(false)
	self.ui.highLight.gameObject:SetActive(false)
	self.ui.tip.gameObject:SetActive(true)
	EventManager:TriggerEvent(Global.Event.GameStage.CharacterChooseComplete, data)
end

function CharacterChoose:AddUIEvent()
	for i = 1, #self.ui.character.Choose do
		local index = i
		UIEventManager:AddListener(self.ui.character.Choose[i].btn, function() self:OnBtnCharacterCard(index) end, "lua.game.characterChoose.OnBtnCharacterCard")
	end
	UIEventManager:AddListener(self.ui.affirmBtn, self.OnBtnAffirm, self, "lua.game.characterChoose.OnBtnAffirm")
end

function CharacterChoose:RemoveUIEvent()
	for i = 1, #self.ui.character.Choose do
		UIEventManager:RemoveAllListeners(self.ui.character.Choose[i].btn)
	end
	UIEventManager:RemoveAllListeners(self.ui.affirmBtn)
end

function CharacterChoose:OnCharacterChoose(data)
	--method
	local Step1, Step2 = nil, nil
	Step1 = function()
		self.ui.character.Content.gameObject:SetActive(true)
		self.ui.character.Content:DOScale(Vector3.one, 0.35):OnComplete(Step2)
		self.ui.character.Choose[1].transform:DOLocalMoveX(-345, 0.35)
		self.ui.character.Choose[3].transform:DOLocalMoveX(345, 0.35)
	end

	Step2 = function()
		for i = 1, #self.ui.character.Choose do
			self.ui.character.Choose[i].btn.interactable = true;
		end
	end
	--method
	self.charactersInfo = data.characters
	self.ui.character.Content.localScale = Vector3.zero
	for i = 1, #self.ui.character.Choose do
		self.ui.character.Choose[i].transform.localPosition = Vector3.zero
		self.ui.character.Choose[i].btn.interactable = false;
		self.ui.character.Choose[i].image.sprite = ResourcesManager:LoadSprite(Global.Resources.Character[data.characters[i]])
	end
	
	Step1()
end

function CharacterChoose:OnGameComplete()
	self:InitUI()
end

function CharacterChoose:OnDealCardsStart(data)
	self.ui.tip.gameObject:SetActive(false)
end

function CharacterChoose:AddListener()
	EventManager:AddListener(Global.Event.GameStage.CharacterChooseStart, function(data) self:OnCharacterChoose(data) end, "Lua.game.characterChoose.OnCharacterChoose")
	EventManager:AddListener(Global.Event.GameStage.GameComplete, function() self:OnGameComplete() end, "Lua.game.characterChoose.OnGameComplete")
	EventManager:AddListener(Global.Event.GameStage.DealCardsStart, function() self:OnDealCardsStart() end, "Lua.game.characterChoose.OnDealCardsStart")
end

function CharacterChoose:RemoveListener()
	EventManager:RemoveListener(Global.Event.GameStage.CharacterChooseStart, "Lua.game.characterChoose.OnCharacterChoose")
	EventManager:RemoveListener(Global.Event.GameStage.GameComplete, "Lua.game.characterChoose.OnGameComplete")
	EventManager:RemoveListener(Global.Event.GameStage.DealCardsStart, "Lua.game.characterChoose.OnDealCardsStart")
end

function CharacterChoose:Dispose()
	self.charactersInfo = nil
	self.affirmCharacter = nil
end