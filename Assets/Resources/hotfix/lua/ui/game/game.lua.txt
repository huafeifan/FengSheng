require "ui/game/dealCard"
require "ui/game/gameBtn"
require "ui/game/chairList"
require "ui/game/identityChoose"
require "ui/game/characterChoose"
require "ui/game/handCard"
require "ui/game/detailCard"
local SetGameStage = Global.Data.RoomInfo.SetGameStage
local SetInformationStage = Global.Data.RoomInfo.SetInformationStage
local Bytes2Lua = Global.Protos.Methods.Bytes2Lua
local RoomInfo = Global.Data.RoomInfo

local ui = {}
local cacheData = {}

local OnReceiveGameStart = nil
local OnReceiveIdentity = nil
local OnReceiveCharacterChooseList = nil
local OnReceiveDealCards = nil
local OnReceiveGameTurn = nil
local OnReceiveGameTurnStart = nil
local OnReceiveGameTurnOpertateEnd = nil
local OnReceiveGameTurnDisCard = nil
local OnReceiveGameTurnEnd = nil
                        
local InitUIReference = function()
	--发牌器托管
	ui.dealCard = DealCard:New(self.transform:Find("CardPool").gameObject)
	ui.dealCard:InitUIReference()
	
	--场景按钮托管
	ui.gameBtn = GameBtn:New(self.gameObject, ui)
	ui.gameBtn:InitUIReference()
	
	--椅子托管
	ui.chairList = ChairList:New(self.transform:Find("ChairList").gameObject, ui.dealCard)
	ui.chairList:InitUIReference()
		
	--身份选择托管
	ui.identityChoose = IdentityChoose:New(self.transform:Find("Identity").gameObject)
	ui.identityChoose:InitUIReference()
	
	--角色选择托管
	ui.characterChoose = CharacterChoose:New(self.transform:Find("CharacterChoose").gameObject)
	ui.characterChoose:InitUIReference()
	
	--手牌托管
	ui.handCard = HandCard:New(self.transform:Find("Bottom/CardContent").gameObject, ui.dealCard)
	ui.handCard:InitUIReference()
	
	--卡牌详情
	ui.detailCard = DetailCard:New(self.transform:Find("Detail").gameObject)
	ui.detailCard:InitUIReference()
end
	
local InitUI = function()
	ui.dealCard:InitUI()
	ui.gameBtn:InitUI()
	ui.chairList:InitUI()
	ui.identityChoose:InitUI()
	ui.characterChoose:InitUI()
	ui.handCard:InitUI()
	ui.detailCard:InitUI()
end

local RefreshRoomInfo = function()
	ui.chairList:RefreshRoomInfo()
	ui.gameBtn:RefreshRoomInfo()
end

local AddUIEvent = function()
	ui.dealCard:AddUIEvent()
	ui.gameBtn:AddUIEvent()
	ui.chairList:AddUIEvent()
	ui.identityChoose:AddUIEvent()
	ui.characterChoose:AddUIEvent()
	ui.handCard:AddUIEvent()
	ui.detailCard:AddUIEvent()
end

local RemoveUIEvent = function()
	ui.dealCard:RemoveUIEvent()
	ui.gameBtn:RemoveUIEvent()
	ui.chairList:RemoveUIEvent()
	ui.identityChoose:RemoveUIEvent()
	ui.characterChoose:RemoveUIEvent()
	ui.handCard:RemoveUIEvent()
	ui.detailCard:RemoveUIEvent()
end

local OnIdentityChooseComplete = function()
	SetGameStage(GameStage.WaitCharacterChoose, nil)
	
	if cacheData.CharacterChoose ~= nil then
		OnReceiveCharacterChooseList(cacheData.CharacterChoose)
	end
end

local OnCharacterChooseComplete = function()
	SetGameStage(GameStage.WaitDealCards, nil)
	
	if cacheData.DealCards ~= nil then
		OnReceiveDealCards(cacheData.DealCards)
	end
end

local OnDealCardsComplete = function()
	if RoomInfo.GameStage == GameStage.WaitDealCards then
		SetGameStage(GameStage.WaitGameTurn, nil)

		if cacheData.GameTurn ~= nil then
			OnReceiveGameTurn(cacheData.GameTurn)
		end
	elseif RoomInfo.GameStage == GameStage.WaitGameTurnDealCards then
		SetGameStage(GameStage.WaitGameTurnOpertateEnd, nil)
		SetInformationStage(InformationStage.WaitStart, nil)
		--if cacheData.GameTurnOpertateEnd ~= nil then
			--OnReceiveGameTurnOpertateEnd(cacheData.GameTurnOpertateEnd)
		--end
	end
end

local OnReceiveRoomInfoChange = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Room, Global.Protos.Class.RoomInfoChange_S2C, bytes)
	RoomInfo.SetRoomInfo(data.roomInfo)
	RoomInfo.SetChairsInfo(data.chairInfoList)
	RefreshRoomInfo()
end

local OnReceiveExitRoom = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Room, Global.Protos.Class.ExitRoom_S2C, bytes)
	if data.code == "Success" then
		RoomInfo.Clear()
		UIManager:CloseUI(Global.GamePrefab_Path)
		UIManager:OpenUI(Global.LoginPrefab_Path)
	elseif data.code == "Kick" then
		Global.Methods.ShowTips(data.msg)
		RoomInfo.Clear()
		UIManager:CloseUI(Global.GamePrefab_Path)
		UIManager:OpenUI(Global.LoginPrefab_Path)
	else
		Global.Methods.ShowTips(data.msg)
	end
end

local OnReceiveRequestRoomInfo = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Room, Global.Protos.Class.RequestRoomInfo_S2C, bytes)
	if data.code == "Success" then
		RoomInfo.SetRoomInfo(data.roomInfo)
		RoomInfo.SetChairsInfo(data.chairInfoList)
		RefreshRoomInfo()
	else
		Global.Methods.ShowTips(data.msg)
	end
end

local OnReceiveReadyStatus = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Room, Global.Protos.Class.ReadyStatus_S2C, bytes)
	if data.code == "Failed" then
		Global.Methods.ShowTips(data.msg)
	end
end

OnReceiveGameStart = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameStart then 
		Debug.LogError("lua.game.OnReceiveGameStart 游戏未初始化")
		return 
	end

	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameStart_S2C, bytes)
	
	if data.code == "Success" then
		--Global.Methods.ShowTips("游戏开始")
		EventManager:TriggerEvent(Global.Event.GameStage.GameStart, data)
		
		SetGameStage(GameStage.WaitIdentityChoose, nil)
		
		if cacheData.IdentityChoose ~= nil then
			OnReceiveIdentity(cacheData.IdentityChoose)
		end
	else
		Global.Methods.ShowTips(data.msg)
	end
end

OnReceiveIdentity = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitIdentityChoose then
		cacheData.IdentityChoose = bytes
		return
	end
	cacheData.IdentityChoose = nil

	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.Identity_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameStage.IdentityChooseStart, data)
end

OnReceiveCharacterChooseList = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitCharacterChoose then
		cacheData.CharacterChoose = bytes
		return
	end

	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.CharacterChooseList_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameStage.CharacterChooseStart, data)
end

local OnReceiveGameComplete = function()
	cacheData = {}
	EventManager:TriggerEvent(Global.Event.GameStage.GameComplete, nil)
	RoomInfo.CurrentGameTurnUserName = nil
	SetGameStage(GameStage.WaitGameStart, nil)
	--服务端会发送一个桌子信息变更的消息
end

OnReceiveDealCards = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitDealCards and
		RoomInfo.GameStage ~= GameStage.WaitGameTurnDealCards then
		cacheData.DealCards = bytes
		return
	end
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.DealCards_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameStage.DealCardsStart, data)
end

OnReceiveGameTurn = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameTurn then
		cacheData.GameTurn = bytes
		return
	end
	cacheData.GameTurn = nil
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurn_S2C, bytes)
	RoomInfo.CurrentGameTurnUserName = data.userName
	EventManager:TriggerEvent(Global.Event.GameStage.GameTurn, data)
	
	SetGameStage(GameStage.WaitGameTurnStart, nil)
	
	if RoomInfo.CurrentGameTurnUserName == Global.Data.User.UserName then
		local sendData = {}
		sendData.userName = data.userName
		local dataBytes = Global.Protos.Methods.Lua2Bytes(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnStart_C2S, sendData)
		NetManager:Send(Global.Login.Network, Global.Protos.Cmd.GameTurnStart_C2S, dataBytes)
	end
	
	if cacheData.GameTurnStart ~= nil then
		OnReceiveGameTurnStart(cacheData.GameTurnStart)
	end
end

OnReceiveGameTurnStart = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameTurnStart then
		cacheData.GameTurnStart = bytes
		return
	end
	cacheData.GameTurnStart = nil
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnStart_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameTurnStart, data)
	
	SetGameStage(GameStage.WaitGameTurnDealCards, nil)
	
	if cacheData.GameTurnDealCards ~= nil then
		OnReceiveDealCards(cacheData.GameTurnDealCards)
	end
end

OnReceiveGameTurnOpertateEnd = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameTurnOpertateEnd then
		cacheData.GameTurnOpertateEnd = bytes
		return
	end
	cacheData.GameTurnOpertateEnd = nil
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnOpertateEnd_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameTurnOpertateEnd, data)

	SetGameStage(GameStage.WaitGameTurnDisCard, nil)
	
	if cacheData.GameTurnDisCard ~= nil then
		OnReceiveGameTurnDisCard(cacheData.GameTurnDisCard)
	end
end

OnReceiveGameTurnDisCard = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameTurnDisCard then
		cacheData.GameTurnDisCard = bytes
		return
	end
	cacheData.GameTurnDisCard = nil
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnDisCard_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameStage.GameTurnDisCardStart, data)

	SetGameStage(GameStage.WaitGameTurnEnd, nil)
	
	if cacheData.GameTurnEnd ~= nil then
		OnReceiveGameTurnEnd(cacheData.GameTurnEnd)
	end
end

OnReceiveGameTurnEnd = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameTurnEnd then
		cacheData.GameTurnEnd = bytes
		return
	end
	cacheData.GameTurnEnd = nil
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnEnd_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameTurnEnd, data)
	
	SetGameStage(GameStage.WaitGameTurn, nil)
	
	if cacheData.GameTurn ~= nil then
		OnReceiveGameTurn(cacheData.GameTurn)
	end
end

local OnReceiveHandCardCount = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.HandCardCount_S2C, bytes)
	if data.userName ~= Global.Data.User.UserName then
		EventManager:TriggerEvent(Global.Event.ReceiveHandCardCount, data)
	end
end

local AddListener = function()
	ui.dealCard:AddListener()
	ui.gameBtn:AddListener()
	ui.chairList:AddListener()
	ui.identityChoose:AddListener()
	ui.characterChoose:AddListener()
	ui.handCard:AddListener()
	ui.detailCard:AddListener()
	EventManager:AddListener(Global.Event.GameStage.IdentityChooseComplete, OnIdentityChooseComplete, "Lua.game.OnIdentityChooseComplete")
	EventManager:AddListener(Global.Event.GameStage.CharacterChooseComplete, OnCharacterChooseComplete, "Lua.game.OnCharacterChooseComplete")
	EventManager:AddListener(Global.Event.GameStage.DealCardsComplete, OnDealCardsComplete, "Lua.game.OnDealCardsComplete")
	ProtosManager:AddListener(Global.Protos.Cmd.ExitRoom_S2C, OnReceiveExitRoom, "Lua.game.OnReceiveExitRoom")
	ProtosManager:AddListener(Global.Protos.Cmd.RoomInfoChange_S2C, OnReceiveRoomInfoChange, "Lua.game.OnReceiveRoomInfoChange")
	ProtosManager:AddListener(Global.Protos.Cmd.RequestRoomInfo_S2C, OnReceiveRequestRoomInfo, "Lua.game.OnReceiveRequestRoomInfo")
	ProtosManager:AddListener(Global.Protos.Cmd.ReadyStatus_S2C, OnReceiveReadyStatus, "Lua.game.OnReceiveReadyStatus")
	ProtosManager:AddListener(Global.Protos.Cmd.GameStart_S2C, OnReceiveGameStart, "Lua.game.OnReceiveGameStart")
	ProtosManager:AddListener(Global.Protos.Cmd.Identity_S2C, OnReceiveIdentity, "Lua.game.OnReceiveIdentity")
	ProtosManager:AddListener(Global.Protos.Cmd.CharacterChooseList_S2C, OnReceiveCharacterChooseList, "Lua.game.OnReceiveCharacterChooseList")
	ProtosManager:AddListener(Global.Protos.Cmd.GameComplete_S2C, OnReceiveGameComplete, "Lua.game.OnReceiveGameComplete")
	ProtosManager:AddListener(Global.Protos.Cmd.DealCards_S2C, OnReceiveDealCards, "Lua.game.OnReceiveDealCards")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurn_S2C, OnReceiveGameTurn, "Lua.game.OnReceiveGameTurn")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurnStart_S2C, OnReceiveGameTurnStart, "Lua.game.OnReceiveGameTurnStart")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurnOpertateEnd_S2C, OnReceiveGameTurnOpertateEnd, "Lua.game.OnReceiveGameTurnOpertateEnd")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurnDisCard_S2C, OnReceiveGameTurnDisCard, "Lua.game.OnReceiveGameTurnDisCard")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurnEnd_S2C, OnReceiveGameTurnEnd, "Lua.game.OnReceiveGameTurnEnd")
	ProtosManager:AddListener(Global.Protos.Cmd.HandCardCount_S2C, OnReceiveHandCardCount, "Lua.game.OnReceiveHandCardCount")
end

local RemoveListener = function()
	ui.dealCard:RemoveListener()
	ui.gameBtn:RemoveListener()
	ui.chairList:RemoveListener()
	ui.identityChoose:RemoveListener()
	ui.characterChoose:RemoveListener()
	ui.handCard:RemoveListener()
	ui.detailCard:RemoveListener()
	EventManager:RemoveListener(Global.Event.GameStage.IdentityChooseComplete, OnIdentityChooseComplete)
	EventManager:RemoveListener(Global.Event.GameStage.CharacterChooseComplete, OnCharacterChooseComplete)
	EventManager:RemoveListener(Global.Event.GameStage.DealCardsComplete, OnDealCardsComplete)
	ProtosManager:RemoveListener(Global.Protos.Cmd.ExitRoom_S2C, OnReceiveExitRoom)
	ProtosManager:RemoveListener(Global.Protos.Cmd.RoomInfoChange_S2C, OnReceiveRoomInfoChange)
	ProtosManager:RemoveListener(Global.Protos.Cmd.RequestRoomInfo_S2C, OnReceiveRequestRoomInfo)
	ProtosManager:RemoveListener(Global.Protos.Cmd.ReadyStatus_S2C, OnReceiveReadyStatus)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameStart_S2C, OnReceiveGameStart)
	ProtosManager:RemoveListener(Global.Protos.Cmd.Identity_S2C, OnReceiveIdentity)
	ProtosManager:RemoveListener(Global.Protos.Cmd.CharacterChooseList_S2C, OnReceiveCharacterChooseList)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameComplete_S2C, OnReceiveGameComplete)
	ProtosManager:RemoveListener(Global.Protos.Cmd.DealCards_S2C, OnReceiveDealCards)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurn_S2C, OnReceiveGameTurn)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurnStart_S2C, OnReceiveGameTurnStart)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurnOpertateEnd_S2C, OnReceiveGameTurnOpertateEnd)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurnDisCard_S2C, OnReceiveGameTurnDisCard)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurnEnd_S2C, OnReceiveGameTurnEnd)
	ProtosManager:RemoveListener(Global.Protos.Cmd.HandCardCount_S2C, OnReceiveHandCardCount)
end

local RequestRoomInfo = function()
	local data = {}
	data.roomNub = RoomInfo.RoomNub
	local dataBytes = Global.Protos.Methods.Lua2Bytes(Global.Protos.FileName.Room, Global.Protos.Class.RequestRoomInfo_C2S, data)
	NetManager:Send(Global.Login.Network, Global.Protos.Cmd.RequestRoomInfo_C2S, dataBytes)
end

local Dispose = function()
	ui.dealCard:Dispose()
	ui.gameBtn:Dispose()
	ui.chairList:Dispose()
	ui.identityChoose:Dispose()
	ui.characterChoose:Dispose()
	ui.handCard:Dispose()
	ui.detailCard:Dispose()
	
	cacheData = {}
end

function awake()
	InitUIReference()
end

function onenable()
	InitUI()
	AddUIEvent()
	AddListener()
	
	RequestRoomInfo()
	SetGameStage(GameStage.WaitGameStart, nil)
end

function ondisable()
	RemoveUIEvent()
	RemoveListener()
	Dispose()
end

function ondestroy()
	RemoveUIEvent()
	RemoveListener()
	Dispose()
end