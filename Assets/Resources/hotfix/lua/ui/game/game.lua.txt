require "ui/game/dealCard"
require "ui/game/gameBtn"
require "ui/game/chairList"
require "ui/game/identityChoose"
require "ui/game/characterChoose"
require "ui/game/handCard"
require "ui/game/detailCard"
require "ui/game/informationCard"
require "ui/game/waitResponse"
require "ui/game/gameComplete"
require "ui/game/playHandCard"

local SetGameStage = Global.Data.RoomInfo.SetGameStage
local SetInformationStage = Global.Data.RoomInfo.SetInformationStage
local Bytes2Lua = Global.Protos.Methods.Bytes2Lua
local RoomInfo = Global.Data.RoomInfo

local ui = {}
local cacheData = {}

local RequestRoomInfo = nil
local OnGameComplete = nil
local OnReceiveGameStart = nil
local OnReceiveIdentity = nil
local OnReceiveCharacterChooseList = nil
local OnReceiveDealCards = nil
local OnReceiveGameTurn = nil
local OnReceiveGameTurnStart = nil
local OnReceiveGameTurnOpertateEnd = nil
local OnReceiveGameTurnDisCard = nil
local OnReceiveGameTurnEnd = nil
                        
local InitUIReference = function()
	--发牌器托管
	ui.dealCard = DealCard:New(self.transform:Find("CardPool").gameObject)
	ui.dealCard:InitUIReference()

	--传递的情报卡托管
	ui.informationCard = InformationCard:New(self.transform:Find("InformationCard").gameObject)
	ui.informationCard:InitUIReference()
	
	--作为效果打出的卡牌托管
	ui.playHandCard = PlayHandCard:New(self.transform:Find("PlayHandCard").gameObject)
	ui.playHandCard:InitUIReference()
	
	--场景按钮托管
	ui.gameBtn = GameBtn:New(self.gameObject, ui)
	ui.gameBtn:InitUIReference()
	
	--椅子托管
	ui.chairList = ChairList:New(self.transform:Find("ChairList").gameObject, ui.dealCard, ui.informationCard, ui.playHandCard)
	ui.chairList:InitUIReference()
		
	--身份选择托管
	ui.identityChoose = IdentityChoose:New(self.transform:Find("Identity").gameObject)
	ui.identityChoose:InitUIReference()
	
	--角色选择托管
	ui.characterChoose = CharacterChoose:New(self.transform:Find("CharacterChoose").gameObject)
	ui.characterChoose:InitUIReference()
	
	--手牌托管
	ui.handCard = HandCard:New(self.transform:Find("Bottom/CardContent").gameObject, ui.dealCard, ui.informationCard, ui.playHandCard)
	ui.handCard:InitUIReference()
	
	--卡牌详情
	ui.detailCard = DetailCard:New(self.transform:Find("Detail").gameObject)
	ui.detailCard:InitUIReference()
	
	--响应事件托管
	ui.waitResponse = WaitResponse:New(self.transform:Find("WaitResponse").gameObject)
	ui.waitResponse:InitUIReference()
	
	ui.gameComplete = GameComplete:New(self.transform:Find("GameComplete").gameObject)
	ui.gameComplete:InitUIReference()
end
	
local InitUI = function()
	ui.dealCard:InitUI()
	ui.informationCard:InitUI()
	ui.playHandCard:InitUI()
	ui.gameBtn:InitUI()
	ui.chairList:InitUI()
	ui.identityChoose:InitUI()
	ui.characterChoose:InitUI()
	ui.handCard:InitUI()
	ui.detailCard:InitUI()
	ui.waitResponse:InitUI()
	ui.gameComplete:InitUI()
end

local RefreshRoomInfo = function()
	ui.chairList:RefreshRoomInfo()
	ui.gameBtn:RefreshRoomInfo()
end

local AddUIEvent = function()
	ui.dealCard:AddUIEvent()
	ui.informationCard:AddUIEvent()
	ui.playHandCard:AddUIEvent()
	ui.gameBtn:AddUIEvent()
	ui.chairList:AddUIEvent()
	ui.identityChoose:AddUIEvent()
	ui.characterChoose:AddUIEvent()
	ui.handCard:AddUIEvent()
	ui.detailCard:AddUIEvent()
	ui.waitResponse:AddUIEvent()
	ui.gameComplete:AddUIEvent()
end

local RemoveUIEvent = function()
	ui.dealCard:RemoveUIEvent()
	ui.informationCard:RemoveUIEvent()
	ui.playHandCard:RemoveUIEvent()
	ui.gameBtn:RemoveUIEvent()
	ui.chairList:RemoveUIEvent()
	ui.identityChoose:RemoveUIEvent()
	ui.characterChoose:RemoveUIEvent()
	ui.handCard:RemoveUIEvent()
	ui.detailCard:RemoveUIEvent()
	ui.waitResponse:RemoveUIEvent()
	ui.gameComplete:RemoveUIEvent()
end

--身份选择完成
local OnIdentityChooseComplete = function()
	SetGameStage(GameStage.WaitCharacterChoose, nil)
	
	if cacheData.CharacterChoose ~= nil then
		OnReceiveCharacterChooseList(cacheData.CharacterChoose)
	end
end

--角色选择完成
local OnCharacterChooseComplete = function()
	SetGameStage(GameStage.WaitDealCards, nil)
	
	if cacheData.DealCards ~= nil then
		OnReceiveDealCards(cacheData.DealCards)
	end
end

--发牌动画结束
local OnDealCardsComplete = function()
	if RoomInfo.GameStage == GameStage.WaitDealCards then
		SetGameStage(GameStage.WaitGameTurn, nil)

		if cacheData.GameTurn ~= nil then
			OnReceiveGameTurn(cacheData.GameTurn)
		end
	elseif RoomInfo.GameStage == GameStage.WaitGameTurnDealCards then
		SetGameStage(GameStage.WaitGameTurnOpertateEnd, nil)
		SetInformationStage(InformationStage.WaitStart, nil)
		SetInformationStage(InformationStage.WaitInformationDeclaration, nil)
	elseif RoomInfo.GameStage == GameStage.WaitInformationTransmit and
		Global.Data.User.UserName == Global.Data.RoomInfo.CurrentGameTurnUserName then
		EventManager:TriggerEvent(Global.Event.InformationStage.WaitInformationTransmit, nil)
	end
end

--发出情报动画结束
local OnInformationTransmitStart = function()
	
end

local OnInfomationCardReceiveComplete = function()
	cacheData.isInfomationCardReceiveComplete = true
	
	if cacheData.isInfomationCardReceiveComplete and cacheData.GameComplete ~= nil then
		OnGameComplete(cacheData.GameComplete)
	end
end

--房间信息变更
local OnReceiveRoomInfoChange = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Room, Global.Protos.Class.RoomInfoChange_S2C, bytes)
	RoomInfo.SetRoomInfo(data.roomInfo)
	RoomInfo.SetChairsInfo(data.chairInfoList)
	RefreshRoomInfo()
end

--退出房间
local OnReceiveExitRoom = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Room, Global.Protos.Class.ExitRoom_S2C, bytes)
	if data.code == "Success" then
		RoomInfo.Clear()
		UIManager:CloseUI(Global.GamePrefab_Path)
		UIManager:OpenUI(Global.LoginPrefab_Path)
	elseif data.code == "Kick" then
		Global.Methods.ShowTips(data.msg)
		RoomInfo.Clear()
		UIManager:CloseUI(Global.GamePrefab_Path)
		UIManager:OpenUI(Global.LoginPrefab_Path)
	else
		Global.Methods.ShowTips(data.msg)
	end
end

--请求房间信息
local OnReceiveRequestRoomInfo = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Room, Global.Protos.Class.RequestRoomInfo_S2C, bytes)
	if data.code == "Success" then
		RoomInfo.SetRoomInfo(data.roomInfo)
		RoomInfo.SetChairsInfo(data.chairInfoList)
		RefreshRoomInfo()
	else
		Global.Methods.ShowTips(data.msg)
	end
end

--准备状态
local OnReceiveReadyStatus = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Room, Global.Protos.Class.ReadyStatus_S2C, bytes)
	if data.code == "Failed" then
		Global.Methods.ShowTips2(data.msg)
	end
end

--游戏开始
OnReceiveGameStart = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameStart then 
		Debug.LogError("lua.game.OnReceiveGameStart 游戏未初始化")
		return 
	end

	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameStart_S2C, bytes)
	
	if data.code == "Success" then
		--Global.Methods.ShowTips2("游戏开始")
		EventManager:TriggerEvent(Global.Event.GameStage.GameStart, data)
		
		SetGameStage(GameStage.WaitIdentityChoose, nil)
		
		if cacheData.IdentityChoose ~= nil then
			OnReceiveIdentity(cacheData.IdentityChoose)
		end
	else
		Global.Methods.ShowTips(data.msg)
	end
end

--身份选择
OnReceiveIdentity = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitIdentityChoose then
		cacheData.IdentityChoose = bytes
		return
	end
	cacheData.IdentityChoose = nil

	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.Identity_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameStage.IdentityChooseStart, data)
end

--角色选择
OnReceiveCharacterChooseList = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitCharacterChoose then
		cacheData.CharacterChoose = bytes
		return
	end

	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.CharacterChooseList_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameStage.CharacterChooseStart, data)
end

--游戏结束
local OnReceiveGameComplete = function(bytes)
	cacheData.GameComplete = bytes

	if cacheData.isInfomationCardReceiveComplete and cacheData.GameComplete ~= nil then
		OnGameComplete(cacheData.GameComplete)
	end
end
	
OnGameComplete = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameComplete_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameStage.GameComplete, data)
	
	cacheData = {}
	Global.Data.RoomInfo.GameStage = GameStage.WaitGameStart
	Global.Data.RoomInfo.InformationStage = InformationStage.WaitStart
	Global.Data.RoomInfo.CurrentGameTurnUserName = nil
	Global.Data.RoomInfo.CurrentAskInformationReceivedPlayerName = nil

	RequestRoomInfo()
end

--抽牌
OnReceiveDealCards = function(bytes)
	if RoomInfo.GameStage == GameStage.WaitDealCards or --处于发牌阶段时
		RoomInfo.GameStage == GameStage.WaitGameTurnDealCards or --处于玩家抽卡阶段时
		(RoomInfo.GameStage == GameStage.WaitGameTurnOpertateEnd and 
		RoomInfo.InformationStage == InformationStage.WaitInformationTransmit) --处于玩家情报牌不足等待送出情报阶段时
		then
		local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.DealCards_S2C, bytes)
		EventManager:TriggerEvent(Global.Event.GameStage.DealCardsStart, data)
	else
		cacheData.DealCards = bytes
	end
end

--轮到某个玩家
OnReceiveGameTurn = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameTurn and RoomInfo.GameStage ~= GameStage.WaitGameTurnOpertateEnd then
		cacheData.GameTurn = bytes
		return
	end
	cacheData.GameTurn = nil
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurn_S2C, bytes)
	RoomInfo.CurrentGameTurnUserName = data.userName
	EventManager:TriggerEvent(Global.Event.GameStage.GameTurn, data)
	
	SetGameStage(GameStage.WaitGameTurnStart, nil)
	
	if RoomInfo.CurrentGameTurnUserName == Global.Data.User.UserName then
		local sendData = {}
		sendData.userName = data.userName
		local dataBytes = Global.Protos.Methods.Lua2Bytes(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnStart_C2S, sendData)
		NetManager:Send(Global.Login.Network, Global.Protos.Cmd.GameTurnStart_C2S, dataBytes)
	end
	
	if cacheData.GameTurnStart ~= nil then
		OnReceiveGameTurnStart(cacheData.GameTurnStart)
	end
end

--玩家回合开始
OnReceiveGameTurnStart = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameTurnStart then
		cacheData.GameTurnStart = bytes
		return
	end
	cacheData.GameTurnStart = nil
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnStart_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameTurnStart, data)
	
	SetGameStage(GameStage.WaitGameTurnDealCards, nil)
	
	if cacheData.GameTurnDealCards ~= nil then
		OnReceiveDealCards(cacheData.GameTurnDealCards)
	end
end

--玩家操作结束
OnReceiveGameTurnOpertateEnd = function(bytes)
	if RoomInfo.GameStage == GameStage.WaitGameTurnOpertateEnd and
		RoomInfo.InformationStage == InformationStage.WaitEnd then
		cacheData.GameTurnOpertateEnd = nil
		local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnOpertateEnd_S2C, bytes)
		EventManager:TriggerEvent(Global.Event.GameTurnOpertateEnd, data)

		SetGameStage(GameStage.WaitGameTurnDisCard, nil)

		if cacheData.GameTurnDisCard ~= nil then
			OnReceiveGameTurnDisCard(cacheData.GameTurnDisCard)
		end
	else
		cacheData.GameTurnOpertateEnd = bytes
	end
end

--玩家弃牌
OnReceiveGameTurnDisCard = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameTurnDisCard then
		cacheData.GameTurnDisCard = bytes
		return
	end
	cacheData.GameTurnDisCard = nil
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnDisCard_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameStage.GameTurnDisCardStart, data)

	SetGameStage(GameStage.WaitGameTurnEnd, nil)
	
	if cacheData.GameTurnEnd ~= nil then
		OnReceiveGameTurnEnd(cacheData.GameTurnEnd)
	end
end

--玩家回合结束
OnReceiveGameTurnEnd = function(bytes)
	if RoomInfo.GameStage ~= GameStage.WaitGameTurnEnd then
		cacheData.GameTurnEnd = bytes
		return
	end
	cacheData.GameTurnEnd = nil
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.GameTurnEnd_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.GameTurnEnd, data)
	
	SetGameStage(GameStage.WaitGameTurn, nil)
	
	if cacheData.GameTurn ~= nil then
		OnReceiveGameTurn(cacheData.GameTurn)
	end
end

--手牌数量
local OnReceiveHandCardCount = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.HandCardCount_S2C, bytes)
	if data.userName ~= Global.Data.User.UserName then
		EventManager:TriggerEvent(Global.Event.InformationStage.ReceiveHandCardCount, data)
	end
end

--收到情报宣言协议
local OnReceiveInformationDeclaration = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.InformationDeclaration_S2C, bytes)
	Global.Methods.ShowTips2("玩家:"..data.userName.."准备传递情报")
end

--收到等待情报发出协议
local OnReceiveWaitInformationTransmit = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.WaitInformationTransmit_S2C, bytes)
	SetInformationStage(InformationStage.WaitInformationTransmit, data)
	if data.userName == Global.Data.User.UserName then
		Global.Methods.ShowTips2("请选择要传递的情报")
	end
end

--收到情报发出协议
local OnReceiveInformationTransmitReady = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.InformationTransmitReady_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.InformationStage.InformationTransmitReady, data)
end
	
--收到等待情报接收协议
local OnReceiveWaitInformationReceive = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.WaitInformationReceive_S2C, bytes)
	SetInformationStage(InformationStage.WaitInformationReceive, nil)
end

local OnReceiveInformationTransmit = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.InformationTransmit_S2C, bytes)
	Global.Data.RoomInfo.CurrentAskInformationReceivedPlayerName = data.userName
	
	if Global.Data.RoomInfo.CurrentAskInformationReceivedPlayerName ~= Global.Data.RoomInfo.CurrentGameTurnUserName then
		Global.Methods.ShowTips2("情报传递玩家:" .. data.userName)
	else
		Global.Methods.ShowTips2("情报传回传出者:" .. data.userName)
	end
	EventManager:TriggerEvent(Global.Event.InformationStage.InformationTransmit, data)
end

--收到玩家接收情报协议
local OnReceiveInformationReceive = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.InformationReceive_S2C, bytes)
	Global.Methods.ShowTips2("玩家:"..data.userName.."准备接收情报")
end

--收到玩家接收情报成功协议
local OnReceiveInformationReceiveSuccess = function(bytes)
	cacheData.isInfomationCardReceiveComplete = false
	
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.InformationReceiveSuccess_S2C, bytes)
	SetInformationStage(InformationStage.WaitEnd, data)
	Global.Methods.ShowTips2("玩家:"..data.userName.."情报接收成功")
	
	if cacheData.GameTurnOpertateEnd ~= nil then
		OnReceiveGameTurnOpertateEnd(cacheData.GameTurnOpertateEnd)
	end
end

--收到玩家持有情报数量协议
local OnReceiveInformationCount = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.InformationCount_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.InformationStage.ReceiveInformationCount, data)
end

--询问是否要出牌
local OnReceiveAskPlayHandCard = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.AskPlayHandCard_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.InformationStage.ReceiveAskPlayHandCard, data)
end

--玩家想要出牌的通知
local OnReceivePlayHandCardResponse = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.PlayHandCardResponse_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.InformationStage.PlayerWantPlayHandCard, data)
end

local OnReceivePlayHandCard = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.PlayHandCard_S2C, bytes)
	if data.code == "Failed" then
		Global.Methods.ShowTips2(data.msg)
		return
	end
	EventManager:TriggerEvent(Global.Event.InformationStage.PlayHandCard, data)
end

local OnReceiveAskUseShiPo = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.AskUseShiPo_S2C, bytes)
	Global.Data.RoomInfo.AskUseShiPo = true
	EventManager:TriggerEvent(Global.Event.InformationStage.AskUseShiPo, data)
end

local OnReceiveTriggerCardResult = function(bytes)
	local data = Bytes2Lua(Global.Protos.FileName.Game, Global.Protos.Class.TriggerCardResult_S2C, bytes)
	EventManager:TriggerEvent(Global.Event.InformationStage.TriggerCardResult, data)
end

local AddListener = function()
	ui.dealCard:AddListener()
	ui.informationCard:AddListener()
	ui.playHandCard:AddListener()
	ui.gameBtn:AddListener()
	ui.chairList:AddListener()
	ui.identityChoose:AddListener()
	ui.characterChoose:AddListener()
	ui.handCard:AddListener()
	ui.detailCard:AddListener()
	ui.waitResponse:AddListener()
	ui.gameComplete:AddListener()
	EventManager:AddListener(Global.Event.GameStage.IdentityChooseComplete, OnIdentityChooseComplete, "Lua.game.OnIdentityChooseComplete")
	EventManager:AddListener(Global.Event.GameStage.CharacterChooseComplete, OnCharacterChooseComplete, "Lua.game.OnCharacterChooseComplete")
	EventManager:AddListener(Global.Event.GameStage.DealCardsComplete, OnDealCardsComplete, "Lua.game.OnDealCardsComplete")
	EventManager:AddListener(Global.Event.InformationStage.InformationTransmitStart, OnInformationTransmitStart, "Lua.game.OnInformationTransmitStart")
	EventManager:AddListener(Global.Event.InformationStage.InfomationCardReceiveComplete, OnInfomationCardReceiveComplete, "Lua.game.OnInfomationCardReceiveComplete")
	ProtosManager:AddListener(Global.Protos.Cmd.ExitRoom_S2C, OnReceiveExitRoom, "Lua.game.OnReceiveExitRoom")
	ProtosManager:AddListener(Global.Protos.Cmd.RoomInfoChange_S2C, OnReceiveRoomInfoChange, "Lua.game.OnReceiveRoomInfoChange")
	ProtosManager:AddListener(Global.Protos.Cmd.RequestRoomInfo_S2C, OnReceiveRequestRoomInfo, "Lua.game.OnReceiveRequestRoomInfo")
	ProtosManager:AddListener(Global.Protos.Cmd.ReadyStatus_S2C, OnReceiveReadyStatus, "Lua.game.OnReceiveReadyStatus")
	ProtosManager:AddListener(Global.Protos.Cmd.GameStart_S2C, OnReceiveGameStart, "Lua.game.OnReceiveGameStart")
	ProtosManager:AddListener(Global.Protos.Cmd.Identity_S2C, OnReceiveIdentity, "Lua.game.OnReceiveIdentity")
	ProtosManager:AddListener(Global.Protos.Cmd.CharacterChooseList_S2C, OnReceiveCharacterChooseList, "Lua.game.OnReceiveCharacterChooseList")
	ProtosManager:AddListener(Global.Protos.Cmd.GameComplete_S2C, OnReceiveGameComplete, "Lua.game.OnReceiveGameComplete")
	ProtosManager:AddListener(Global.Protos.Cmd.DealCards_S2C, OnReceiveDealCards, "Lua.game.OnReceiveDealCards")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurn_S2C, OnReceiveGameTurn, "Lua.game.OnReceiveGameTurn")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurnStart_S2C, OnReceiveGameTurnStart, "Lua.game.OnReceiveGameTurnStart")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurnOpertateEnd_S2C, OnReceiveGameTurnOpertateEnd, "Lua.game.OnReceiveGameTurnOpertateEnd")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurnDisCard_S2C, OnReceiveGameTurnDisCard, "Lua.game.OnReceiveGameTurnDisCard")
	ProtosManager:AddListener(Global.Protos.Cmd.GameTurnEnd_S2C, OnReceiveGameTurnEnd, "Lua.game.OnReceiveGameTurnEnd")
	ProtosManager:AddListener(Global.Protos.Cmd.HandCardCount_S2C, OnReceiveHandCardCount, "Lua.game.OnReceiveHandCardCount")
	ProtosManager:AddListener(Global.Protos.Cmd.InformationDeclaration_S2C, OnReceiveInformationDeclaration, "Lua.game.OnReceiveInformationDeclaration")
	ProtosManager:AddListener(Global.Protos.Cmd.WaitInformationTransmit_S2C, OnReceiveWaitInformationTransmit, "Lua.game.OnReceiveWaitInformationTransmit")
	ProtosManager:AddListener(Global.Protos.Cmd.InformationTransmitReady_S2C, OnReceiveInformationTransmitReady, "Lua.game.OnReceiveInformationTransmitReady")
	ProtosManager:AddListener(Global.Protos.Cmd.WaitInformationReceive_S2C, OnReceiveWaitInformationReceive, "Lua.game.OnReceiveWaitInformationReceive")
	ProtosManager:AddListener(Global.Protos.Cmd.InformationReceive_S2C, OnReceiveInformationReceive, "Lua.game.OnReceiveInformationReceive")
	ProtosManager:AddListener(Global.Protos.Cmd.InformationReceiveSuccess_S2C, OnReceiveInformationReceiveSuccess, "Lua.game.OnReceiveInformationReceiveSuccess")
	ProtosManager:AddListener(Global.Protos.Cmd.InformationCount_S2C, OnReceiveInformationCount, "Lua.game.OnReceiveInformationCount")
	ProtosManager:AddListener(Global.Protos.Cmd.AskPlayHandCard_S2C, OnReceiveAskPlayHandCard, "Lua.game.OnReceiveAskPlayHandCard")
	ProtosManager:AddListener(Global.Protos.Cmd.PlayHandCardResponse_S2C, OnReceivePlayHandCardResponse, "Lua.game.OnReceivePlayHandCardResponse")
	ProtosManager:AddListener(Global.Protos.Cmd.PlayHandCard_S2C, OnReceivePlayHandCard, "Lua.game.OnReceivePlayHandCard")
	ProtosManager:AddListener(Global.Protos.Cmd.AskUseShiPo_S2C, OnReceiveAskUseShiPo, "Lua.game.OnReceiveAskUseShiPo")
	ProtosManager:AddListener(Global.Protos.Cmd.TriggerCardResult_S2C, OnReceiveTriggerCardResult, "Lua.game.OnReceiveTriggerCardResult")
	ProtosManager:AddListener(Global.Protos.Cmd.InformationTransmit_S2C, OnReceiveInformationTransmit, "Lua.game.OnReceiveInformationTransmit")
end

local RemoveListener = function()
	ui.dealCard:RemoveListener()
	ui.informationCard:RemoveListener()
	ui.playHandCard:RemoveListener()
	ui.gameBtn:RemoveListener()
	ui.chairList:RemoveListener()
	ui.identityChoose:RemoveListener()
	ui.characterChoose:RemoveListener()
	ui.handCard:RemoveListener()
	ui.detailCard:RemoveListener()
	ui.waitResponse:RemoveListener()
	ui.gameComplete:RemoveListener()
	EventManager:RemoveListener(Global.Event.GameStage.IdentityChooseComplete, OnIdentityChooseComplete)
	EventManager:RemoveListener(Global.Event.GameStage.CharacterChooseComplete, OnCharacterChooseComplete)
	EventManager:RemoveListener(Global.Event.GameStage.DealCardsComplete, OnDealCardsComplete)
	EventManager:RemoveListener(Global.Event.InformationStage.InformationTransmitStart, OnInformationTransmitStart)
	EventManager:RemoveListener(Global.Event.InformationStage.InfomationCardReceiveComplete, OnInfomationCardReceiveComplete)
	ProtosManager:RemoveListener(Global.Protos.Cmd.ExitRoom_S2C, OnReceiveExitRoom)
	ProtosManager:RemoveListener(Global.Protos.Cmd.RoomInfoChange_S2C, OnReceiveRoomInfoChange)
	ProtosManager:RemoveListener(Global.Protos.Cmd.RequestRoomInfo_S2C, OnReceiveRequestRoomInfo)
	ProtosManager:RemoveListener(Global.Protos.Cmd.ReadyStatus_S2C, OnReceiveReadyStatus)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameStart_S2C, OnReceiveGameStart)
	ProtosManager:RemoveListener(Global.Protos.Cmd.Identity_S2C, OnReceiveIdentity)
	ProtosManager:RemoveListener(Global.Protos.Cmd.CharacterChooseList_S2C, OnReceiveCharacterChooseList)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameComplete_S2C, OnReceiveGameComplete)
	ProtosManager:RemoveListener(Global.Protos.Cmd.DealCards_S2C, OnReceiveDealCards)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurn_S2C, OnReceiveGameTurn)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurnStart_S2C, OnReceiveGameTurnStart)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurnOpertateEnd_S2C, OnReceiveGameTurnOpertateEnd)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurnDisCard_S2C, OnReceiveGameTurnDisCard)
	ProtosManager:RemoveListener(Global.Protos.Cmd.GameTurnEnd_S2C, OnReceiveGameTurnEnd)
	ProtosManager:RemoveListener(Global.Protos.Cmd.HandCardCount_S2C, OnReceiveHandCardCount)
	ProtosManager:RemoveListener(Global.Protos.Cmd.InformationDeclaration_S2C, OnReceiveInformationDeclaration)
	ProtosManager:RemoveListener(Global.Protos.Cmd.WaitInformationTransmit_S2C, OnReceiveWaitInformationTransmit)
	ProtosManager:RemoveListener(Global.Protos.Cmd.InformationTransmitReady_S2C, OnReceiveInformationTransmitReady)
	ProtosManager:RemoveListener(Global.Protos.Cmd.WaitInformationReceive_S2C, OnReceiveWaitInformationReceive)
	ProtosManager:RemoveListener(Global.Protos.Cmd.InformationReceive_S2C, OnReceiveInformationReceive)
	ProtosManager:RemoveListener(Global.Protos.Cmd.InformationReceiveSuccess_S2C, OnReceiveInformationReceiveSuccess)
	ProtosManager:RemoveListener(Global.Protos.Cmd.InformationCount_S2C, OnReceiveInformationCount)
	ProtosManager:RemoveListener(Global.Protos.Cmd.AskPlayHandCard_S2C, OnReceiveAskPlayHandCard)
	ProtosManager:RemoveListener(Global.Protos.Cmd.PlayHandCardResponse_S2C, OnReceivePlayHandCardResponse)
	ProtosManager:RemoveListener(Global.Protos.Cmd.PlayHandCard_S2C, OnReceivePlayHandCard)
	ProtosManager:RemoveListener(Global.Protos.Cmd.AskUseShiPo_S2C, OnReceiveAskUseShiPo)
	ProtosManager:RemoveListener(Global.Protos.Cmd.TriggerCardResult_S2C, OnReceiveTriggerCardResult)
	ProtosManager:RemoveListener(Global.Protos.Cmd.InformationTransmit_S2C, OnReceiveInformationTransmit)
end

RequestRoomInfo = function()
	local data = {}
	data.roomNub = RoomInfo.RoomNub
	local dataBytes = Global.Protos.Methods.Lua2Bytes(Global.Protos.FileName.Room, Global.Protos.Class.RequestRoomInfo_C2S, data)
	NetManager:Send(Global.Login.Network, Global.Protos.Cmd.RequestRoomInfo_C2S, dataBytes)
end

local Dispose = function()
	ui.dealCard:Dispose()
	ui.informationCard:Dispose()
	ui.playHandCard:Dispose()
	ui.gameBtn:Dispose()
	ui.chairList:Dispose()
	ui.identityChoose:Dispose()
	ui.characterChoose:Dispose()
	ui.handCard:Dispose()
	ui.detailCard:Dispose()
	ui.waitResponse:Dispose()
	ui.gameComplete:Dispose()
	
	cacheData = {}
end

function awake()
	InitUIReference()
end

function onenable()
	InitUI()
	AddUIEvent()
	AddListener()
	
	RequestRoomInfo()
	SetGameStage(GameStage.WaitGameStart, nil)
end

function update()
	ui.waitResponse:Update()
	ui.handCard:Update()
end

function ondisable()
	RemoveUIEvent()
	RemoveListener()
	Dispose()
end

function ondestroy()
	RemoveUIEvent()
	RemoveListener()
	Dispose()
end