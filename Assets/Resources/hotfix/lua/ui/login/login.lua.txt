require "ui/login/userHead"

local ui = {}
local inputName = nil
local debugTrigger = 0

local InitUIReference = function()
	ui.bg = self.transform:Find("Bg"):GetComponent(typeof(Image))
	ui.startBtn = self.transform:Find("BtnList/StartBtn"):GetComponent(typeof(Button))
	ui.exitBtn = self.transform:Find("BtnList/ExitBtn"):GetComponent(typeof(Button))
	ui.loginBtn = self.transform:Find("BtnList/LoginBtn"):GetComponent(typeof(Button))
	ui.createRoomBtn = self.transform:Find("BtnList/CreateRoomBtn"):GetComponent(typeof(Button))
	ui.checkRoomBtn = self.transform:Find("BtnList/CheckRoomBtn"):GetComponent(typeof(Button))
	ui.restartBtn = self.transform:Find("BtnList/RestartBtn"):GetComponent(typeof(Button))
	ui.ruleBtn = self.transform:Find("BtnList/RuleBtn"):GetComponent(typeof(Button))
	ui.inputName = self.transform:Find("InputName"):GetComponent(typeof(InputField))
	ui.version = self.transform:Find("Version"):GetComponent(typeof(Text))
	ui.debugBtn = self.transform:Find("DebugBtn"):GetComponent(typeof(Button))
	
	ui.head = UserHead:New(self.transform:Find("User").gameObject)
	ui.head:InitUIReference()

end

local InitUI = function()
	if Global.Data.User.UserName ~= nil then
		ui.startBtn.gameObject:SetActive(false)
		ui.exitBtn.gameObject:SetActive(true)
		ui.loginBtn.gameObject:SetActive(false)
		ui.createRoomBtn.gameObject:SetActive(true)
		ui.checkRoomBtn.gameObject:SetActive(true)
		ui.restartBtn.gameObject:SetActive(true)
		ui.ruleBtn.gameObject:SetActive(true)
		ui.head:SetActive(true)
		ui.head:SetData(Global.Data.User.UserName)
	else
		ui.startBtn.gameObject:SetActive(false)
		ui.exitBtn.gameObject:SetActive(false)
		ui.loginBtn.gameObject:SetActive(false)
		ui.createRoomBtn.gameObject:SetActive(false)
		ui.checkRoomBtn.gameObject:SetActive(false)
		ui.restartBtn.gameObject:SetActive(false)
		ui.ruleBtn.gameObject:SetActive(false)
		ui.inputName.gameObject:SetActive(false)
		ui.head:SetActive(false)
	
		ui.bg.color = Color(1, 1, 1, 0)
		
		ui.bg:DOFade(1, 3):SetEase(Ease.InCubic):OnComplete(
			function()
				ui.startBtn.gameObject:SetActive(true)
				ui.exitBtn.gameObject:SetActive(true)
				ui.restartBtn.gameObject:SetActive(true)
				ui.ruleBtn.gameObject:SetActive(true)
			end)
	end
	
	local versionInfo = Utils:GetCurrentVersion()
	ui.version.text = "L" .. versionInfo.LuaVersion .. "_O" .. versionInfo.ProtosVersion .. "_T" .. versionInfo.TextureVersion .. "_P" .. versionInfo.PrefabVersion
end

local OnBtnStart = function()
	Global.Methods.PlayBtnAnimation(ui.startBtn)
	NetManager:Connect(Global.Login.Network, Global.Login.ServerIP, Global.Login.ServerPort)
end

local OnBtnExit = function()
	Global.Methods.PlayBtnAnimation(ui.exitBtn)
	EventManager:TriggerEvent(Global.Event.Exit, nil)
end

local CheckInputName = function(s)
	if s == nil or string.len(s) <= 0 then
		Global.Methods.ShowTips2("请输入名称")
		return false
	end
	
	return true
end

local OnBtnLogin = function()
	Global.Methods.PlayBtnAnimation(ui.loginBtn)
	if CheckInputName(inputName) == true then
		local data = {}
		data.name = inputName
		local dataBytes = Global.Protos.Methods.Lua2Bytes(Global.Protos.FileName.Login, Global.Protos.Class.Login_C2S, data)
		NetManager:Send(Global.Login.Network, Global.Protos.Cmd.Login_C2S, dataBytes)
	end
end

local OnInputNameChanged = function(s)
	inputName = s
end

local OnBtnCreateRoom = function()
	Global.Methods.PlayBtnAnimation(ui.createRoomBtn)
	UIManager:OpenUI(Global.CreateRoomPrefab_Path)
end

local OnBtnCheckRoom = function()
	Global.Methods.PlayBtnAnimation(ui.checkRoomBtn)
	UIManager:OpenUI(Global.RoomListPrefab_Path)
end

local OnBtnRestart = function()
	EventManager:TriggerEvent(Global.Event.Restart, nil)
end

local OnBtnRule = function()
	Global.Methods.PlayBtnAnimation(ui.ruleBtn)
	UIManager:OpenUI(Global.RulePrefab_Path)
end

local OnBtnDebug = function()
	debugTrigger = debugTrigger + 1
	Debug.Log(debugTrigger)
	if debugTrigger >= 5 then
		DebugManager:SetDisPlayLog(true)
	end
end

local AddUIEvent = function()
	ui.head:AddUIEvent()
	UIEventManager:AddListener(ui.startBtn, OnBtnStart, "lua.login.OnBtnStart")
	UIEventManager:AddListener(ui.exitBtn, OnBtnExit, "lua.login.OnBtnExit")
	UIEventManager:AddListener(ui.loginBtn, OnBtnLogin, "lua.login.OnBtnLogin")
	UIEventManager:AddListener(ui.createRoomBtn, OnBtnCreateRoom, "lua.login.OnBtnCreateRoom")
	UIEventManager:AddListener(ui.checkRoomBtn, OnBtnCheckRoom, "lua.login.OnBtnCheckRoom")
	UIEventManager:AddListener(ui.restartBtn, OnBtnRestart, "lua.login.OnBtnRestart")
	UIEventManager:AddListener(ui.ruleBtn, OnBtnRule, "lua.login.OnBtnRule")
	UIEventManager:AddListener(ui.debugBtn, OnBtnDebug, "lua.login.OnBtnDebug")
	UIEventManager:AddListener(ui.inputName, OnInputNameChanged, "lua.login.OnInputNameChanged")
end

local RemoveUIEvent = function()
	ui.head:RemoveUIEvent()
	UIEventManager:RemoveAllListeners(ui.startBtn)
	UIEventManager:RemoveAllListeners(ui.exitBtn)
	UIEventManager:RemoveAllListeners(ui.loginBtn)
	UIEventManager:RemoveAllListeners(ui.createRoomBtn)
	UIEventManager:RemoveAllListeners(ui.checkRoomBtn)
	UIEventManager:RemoveAllListeners(ui.restartBtn)
	UIEventManager:RemoveAllListeners(ui.ruleBtn)
	UIEventManager:RemoveAllListeners(ui.debugBtn)
	UIEventManager:RemoveAllListeners(ui.inputName)
end

local OnConnect = function(netWorkEventPackage)
	if netWorkEventPackage.NetName == Global.Login.Network then
		if netWorkEventPackage.ConnectResult == true then
			Debug.Log("网络连接成功")
			--登录相关 
			ui.startBtn.gameObject:SetActive(false)
			ui.loginBtn.gameObject:SetActive(true)
			ui.inputName.gameObject:SetActive(true)
		end
	end
end

local OnLogin = function(bytes)
	local data = Global.Protos.Methods.Bytes2Lua(Global.Protos.FileName.Login, Global.Protos.Class.Login_S2C, bytes)
	
	if data.code == "Success" then
		Global.Methods.ShowTips2(data.msg)
		ui.loginBtn.gameObject:SetActive(false)
		ui.inputName.gameObject:SetActive(false)
		ui.createRoomBtn.gameObject:SetActive(true)
		ui.checkRoomBtn.gameObject:SetActive(true)
		
		ui.head:SetActive(true)
		ui.head:SetData(data.user.name)
		
		Global.Data.User.SetData(data.user)
	else
		Global.Methods.ShowTips(data.msg)
	end
	
end

local OnReceiveEnterRoom = function(bytes)
	local data = Global.Protos.Methods.Bytes2Lua(Global.Protos.FileName.Room, Global.Protos.Class.EnterRoom_S2C, bytes)
	
	if data.code == "Success" then
		Global.Data.RoomInfo.SetRoomInfo(data.roomInfo)
		UIManager:OpenUI(Global.GamePrefab_Path)
		UIManager:CloseUI(Global.LoginPrefab_Path)
		UIManager:CloseUI(Global.RoomListPrefab_Path)
	else
		Global.Methods.ShowTips(data.msg)
	end
end

local AddListener = function()
	EventManager:AddListener(Global.Event.Connect, OnConnect, "Lua.login.OnConnect")
	ProtosManager:AddListener(Global.Protos.Cmd.Login_S2C, OnLogin, "Lua.login.OnLogin")
	ProtosManager:AddListener(Global.Protos.Cmd.EnterRoom_S2C, OnReceiveEnterRoom, "Lua.login.OnReceiveEnterRoom")
	ui.head:AddListener()
end

local RemoveListener = function()
	EventManager:RemoveListener(Global.Event.Connect, OnConnect)
	ProtosManager:RemoveListener(Global.Protos.Cmd.Login_S2C, OnLogin)
	ProtosManager:RemoveListener(Global.Protos.Cmd.EnterRoom_S2C, OnReceiveEnterRoom)
	ui.head:RemoveListener()
end

local Dispose = function()
	if ui.head ~= nil then
		ui.head:Dispose()
	end
end

function awake()
	InitUIReference()
end

function onenable()
	InitUI()
	AddUIEvent()
	AddListener()
end

function ondisable()
	RemoveUIEvent()
	RemoveListener()
	Dispose()
end

function ondestroy()
	RemoveUIEvent()
	RemoveListener()
	Dispose()
end

